import turtle
import random

win=turtle.Screen()
win.bgcolor("grey")
turtle.title("Flags Game")
t= turtle.Turtle()
t.shape("turtle")
t.speed(10)
t.hideturtle()




def austria():

    t.color("white")
    t.fd(50)
    t.lt(90)
    t.begin_fill()
    t.fd(250)
    t.lt(90)
    t.fd(50)
    t.lt(90)
    t.fd(250)
    t.lt(90)
    t.fd(50)
    t.end_fill()
    t.begin_fill()
    t.color("red")
    t.fd(50)
    t.lt(90)
    t.fd(250)
    t.lt(90)
    t.fd(50)
    t.lt(90)
    t.fd(250)
    t.lt(90)
    t.fd(50)
    t.end_fill()

def belgium():

    t.penup()
    t.goto(-250, 0)
    t.pendown()
    t.color("black")
    t.begin_fill()
    t.forward(100)
    t.left(90)
    t.forward(200)
    t.left(90)
    t.forward(100)
    t.left(90)
    t.forward(200)
    t.left(90)
    t.end_fill()
    t.penup()
    t.goto(-150, 0)
    t.pendown()
    t.color("yellow")
    t.begin_fill()
    t.forward(100)
    t.left(90)
    t.forward(200)
    t.left(90)
    t.forward(100)
    t.left(90)
    t.forward(200)
    t.left(90)
    t.end_fill()
    t.penup()
    t.goto(-50, 0)
    t.pendown()
    t.color("red")
    t.begin_fill()
    t.forward(100)
    t.left(90)
    t.forward(200)
    t.left(90)
    t.forward(100)
    t.left(90)
    t.forward(200)
    t.left(90)
    t.end_fill()

def estonia():

    t.pu()
    t.goto(-300, 300)
    t.pd()
    t.color("blue")
    t.goto(400, 300)
    t.begin_fill()
    t.rt(90)
    t.fd(200)
    t.rt(90)
    t.fd(700)
    t.rt(90)
    t.fd(200)
    t.rt(90)
    t.end_fill()
    t.pu()
    t.goto(-300, 100)
    t.pd()
    t.color("white")
    t.begin_fill()
    t.fd(700)
    t.rt(90)
    t.fd(200)
    t.rt(90)
    t.fd(700)
    t.rt(90)
    t.fd(200)
    t.end_fill()
    t.pu()
    t.goto(-300, -300)
    t.rt(90)
    t.color("black")
    t.pd()
    t.goto(400, -300)
    t.begin_fill()
    t.goto(400, -300)
    t.lt(90)
    t.fd(200)
    t.lt(90)
    t.fd(700)
    t.lt(90)
    t.fd(200)
    t.end_fill()

def france():

    t.pu()
    t.pendown()
    t.color("blue")
    t.begin_fill()
    t.forward(100)
    t.left(90)
    t.forward(200)
    t.left(90)
    t.forward(100)
    t.left(90)
    t.forward(200)
    t.left(90)
    t.end_fill()
    t.pu()
    t.goto(100, 0)
    t.pd()
    t.color("white")
    t.begin_fill()
    t.forward(100)
    t.left(90)
    t.forward(200)
    t.left(90)
    t.forward(100)
    t.left(90)
    t.forward(200)
    t.left(90)
    t.end_fill()
    t.penup()
    t.goto(200, 0)
    t.pendown()
    t.color("red")
    t.begin_fill()
    t.forward(100)
    t.left(90)
    t.forward(200)
    t.left(90)
    t.forward(100)
    t.left(90)
    t.forward(200)
    t.left(90)
    t.end_fill()

def germany():
    t.penup()
    t.goto(-300, 100)
    t.pendown()
    t.fillcolor("black")
    t.begin_fill()
    t.forward(200)
    t.right(90)
    t.forward(50)
    t.right(90)
    t.forward(200)
    t.right(90)
    t.forward(50)
    t.right(90)
    t.end_fill()
    t.penup()
    t.goto(-300, 50)
    t.pendown()
    t.fillcolor("red")
    t.begin_fill()
    t.forward(200)
    t.right(90)
    t.forward(50)
    t.right(90)
    t.forward(200)
    t.right(90)
    t.forward(50)
    t.right(90)
    t.end_fill()
    t.penup()
    t.goto(-300, 0)
    t.pendown()
    t.fillcolor("gold")
    t.begin_fill()
    t.forward(200)
    t.right(90)
    t.forward(50)
    t.right(90)
    t.forward(200)
    t.right(90)
    t.forward(50)
    t.right(90)
    t.end_fill()

def italy():
    t.penup()
    t.goto(250, 0)
    t.pendown()
    t.color("green")
    t.begin_fill()
    t.forward(100)
    t.left(90)
    t.forward(200)
    t.left(90)
    t.forward(100)
    t.left(90)
    t.forward(200)
    t.left(90)
    t.end_fill()
    t.penup()
    t.goto(350, 0)
    t.pendown()
    t.color("white")
    t.begin_fill()
    t.forward(100)
    t.left(90)
    t.forward(200)
    t.left(90)
    t.forward(100)
    t.left(90)
    t.forward(200)
    t.left(90)
    t.end_fill()
    t.penup()
    t.goto(450, 0)
    t.pendown()
    t.color("red")
    t.begin_fill()
    t.forward(100)
    t.left(90)
    t.forward(200)
    t.left(90)
    t.forward(100)
    t.left(90)
    t.forward(200)
    t.left(90)
    t.end_fill()

def poland():
    t.color("white")
    t.begin_fill()
    t.goto(0, 75)
    t.fd(100)
    t.rt(90)
    t.fd(75)
    t.rt(90)
    t.fd(200)
    t.rt(90)
    t.fd(75)
    t.rt(90)
    t.fd(100)
    t.end_fill()
    t.pu()
    t.color("red")
    t.begin_fill()
    t.goto(0, 0)
    t.pd()
    t.fd(100)
    t.rt(90)
    t.fd(75)
    t.rt(90)
    t.fd(200)
    t.rt(90)
    t.fd(75)
    t.rt(90)
    t.fd(100)
    t.end_fill()

def sweden():
    t.pu()
    t.color("blue")
    t.goto(-200, 300)
    t.pd()
    t.begin_fill()
    t.fd(200)
    t.rt(90)
    t.fd(120)
    t.rt(90)
    t.fd(200)
    t.rt(90)
    t.fd(120)
    t.rt(90)
    t.fd(200)
    t.end_fill()
    t.color("yellow")
    t.begin_fill()
    t.pu()
    t.goto(-110, 300)
    t.pd()
    t.rt(90)
    t.fd(120)
    t.rt(90)
    t.fd(30)
    t.rt(90)
    t.fd(120)
    t.rt(90)
    t.fd(30)
    t.end_fill()
    t.begin_fill()
    t.pu()
    t.goto(-200, 250)
    t.pd()
    t.fd(200)
    t.rt(90)
    t.fd(30)
    t.rt(90)
    t.fd(200)
    t.rt(90)
    t.fd(30)
    t.end_fill()

def greece():
    t.penup()
    t.goto(-180, 120)
    t.pendown()

    stripe_height = 20
    for i in range(9):
        t.begin_fill()
        if i % 2 == 0:
            t.fillcolor("blue")
        else:
            t.fillcolor("white")
        for _ in range(2):
            t.forward(320)
            t.right(90)
            t.forward(stripe_height)
            t.right(90)
        t.end_fill()
        t.penup()
        t.right(90)
        t.forward(stripe_height)
        t.left(90)
        t.pendown()

    t.penup()
    t.goto(-180, 120)
    t.pendown()
    t.begin_fill()
    t.fillcolor("blue")
    for _ in range(2):
        t.forward(120)
        t.right(90)
        t.forward(80)
        t.right(90)
    t.end_fill()

    t.color("white")
    t.penup()
    t.goto(-180 + 60, 120)
    t.setheading(-90)
    t.pendown()
    t.pensize(8)
    t.forward(80)

    t.penup()
    t.goto(-180, 120 - 40)
    t.setheading(0)
    t.pendown()
    t.forward(120)


yala=[austria,belgium,estonia,france,germany,italy,poland,sweden,greece]
Lives = 3
points = 0

while len(yala) !=0 and Lives !=0 :# len=length tis gialas DEN EINAI TO 0, paikse to paixnidi
    t.reset()   #Καθαρίζει κάθε σημαία, και βάζει την turtle στο 0,0 (x,y)
    flag = random.choice(yala)  #tixaia epilogi apo yala
    flag() #to kanei print ipotithetai
    answer=input("Which flag is this??: ")


    if answer.lower() == flag.__name__: # to lower kanei mikra ta grammata tis apantishs kai to __name__ pairnei to onoma tis sinartisis #yala.remove(flag)<-- bgazei tin simaia apo tin giala ama apantisw sosta
        yala.remove(flag)
        points+=2
        print("Correct, you gained 2 points!")

    else:
        points-=2
        Lives-=1
    print("Points :",points)
    print("Lives:",Lives)

    if points == -10:
        print("Take the L")

    elif points== 18:
        print("You Won!!")


    if Lives == 0:
        print('You lost.')
        t.write("You lost!", align="center", font=("Tahoma",16,"bold") )
    else:
        t.write("You won!1!", align="center", font=("Tahoma", 16, "bold"))
        t.pu()
        t.goto(0,-20)
        t.pd()
        t.write("Points:" + str(points), align="left", font=("Tahoma", 16, "bold"))  # str = string = keimeno


turtle.done()